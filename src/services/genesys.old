const logger = require('../utils/logger');
const { loadConnectionsConfig } = require('./token');

// Store for client connections
const clientConnections = {};

function connectToGenesys(connectionId, topics) {
    logger.info('Connecting to Genesys Cloud', { 
        connectionId, 
        topics 
    });

    // Hent forbindelseskonfiguration for at få navnet
    const configs = loadConnectionsConfig();
    const connection = configs.connections.find(c => c.id === connectionId);
    
    if (!connection) {
        throw new Error('Connection not found');
    }

    // Sørg for at emner altid er et array
    const topicsArray = Array.isArray(topics) ? topics : [topics];
    
    // Tjek om forbindelsen allerede eksisterer
    if (clientConnections[connectionId]) {
        // Tilføj nye emner til eksisterende forbindelse
        const existingTopics = clientConnections[connectionId].topics || [];
        const uniqueTopics = [...new Set([...existingTopics, ...topicsArray])];
        
        clientConnections[connectionId] = {
            ...clientConnections[connectionId],
            topics: uniqueTopics,
            timestamp: new Date()
        };
    } else {
        // Opret ny forbindelse
        clientConnections[connectionId] = {
            id: connectionId,
            name: connection.name,
            topics: topicsArray,
            timestamp: new Date()
        };
    }

    return Promise.resolve();
}

function disconnectFromGenesys(connectionId) {
    logger.info('Disconnecting from Genesys Cloud', { connectionId });

    if (clientConnections[connectionId]) {
        delete clientConnections[connectionId];
    }
}

function getActiveNotifications() {
    return Object.keys(clientConnections).map(id => ({
        id,
        name: clientConnections[id].name,
        topics: clientConnections[id].topics
    }));
}

module.exports = {
    connectToGenesys,
    disconnectFromGenesys,
    getActiveNotifications
};